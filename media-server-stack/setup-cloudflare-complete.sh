#!/usr/bin/env bash
set -euo pipefail

echo "üîê Cloudflare Zero Trust Setup for Complete Media Stack"
echo "======================================================="

# Load environment
source .env

echo "Domain: $DOMAIN"
echo "Admin Email: $EMAIL"
echo ""

# All services that need Cloudflare Access protection
declare -A all_services=(
    # Core Services
    ["jellyfin"]="Media Server - Stream movies, TV, music"
    ["sonarr"]="TV Management - Download TV shows automatically"
    ["radarr"]="Movie Management - Download movies automatically"
    ["prowlarr"]="Indexer Management - Manage torrent/usenet sources"
    ["overseerr"]="Request Management - User-friendly media requests"
    ["traefik"]="Reverse Proxy Dashboard - View routing and SSL status"
    
    # Additional Media Services
    ["lidarr"]="Music Management - Download music automatically"
    ["readarr"]="Book Management - Download ebooks automatically" 
    ["bazarr"]="Subtitle Management - Download subtitles for media"
    ["tautulli"]="Jellyfin Analytics - View usage stats and monitoring"
    ["mylar"]="Comic Management - Download comics automatically"
    ["podgrab"]="Podcast Management - Download and organize podcasts"
    ["youtube-dl"]="Video Downloader - Download videos from YouTube/other sites"
    ["photoprism"]="Photo Management - AI-powered photo organization"
    
    # Monitoring Services
    ["grafana"]="Monitoring Dashboards - Visualize system metrics"
    ["prometheus"]="Metrics Collection - System and service monitoring"
    ["alertmanager"]="Alert Management - Send notifications for issues"
)

echo "üéØ Services to Configure in Cloudflare Zero Trust:"
echo "================================================="
echo ""

for service in "${!all_services[@]}"; do
    description="${all_services[$service]}"
    echo "üîó $service.$DOMAIN"
    echo "   $description"
    echo ""
done

echo "üìã Cloudflare Zero Trust Configuration Steps:"
echo "============================================="
echo ""

echo "1. üåê DNS Records (Auto-create with API):"
echo "   All CNAME records pointing to $DOMAIN with Proxy enabled (üß°)"
echo ""

echo "2. üîó Tunnel Public Hostnames:"
echo "   In Zero Trust ‚Üí Networks ‚Üí Tunnels ‚Üí morloksmaze-media-tunnel"
echo "   Add these public hostnames (ALL point to: HTTP://traefik:80):"
echo ""

for service in "${!all_services[@]}"; do
    echo "   $service.$DOMAIN ‚Üí HTTP://traefik:80"
done

echo ""
echo "3. üõ°Ô∏è  Access Applications:"
echo "   In Zero Trust ‚Üí Access ‚Üí Applications"
echo "   Create one application for each service with these settings:"
echo ""

echo "   Application Template:"
echo "   - Type: Self-hosted"
echo "   - Application domain: [service].$DOMAIN"
echo "   - Session duration: 24 hours"
echo "   - Policy: Allow ‚Üí Emails ‚Üí $EMAIL"
echo ""

echo "üöÄ Quick Setup Commands:"
echo "======================="
echo ""

echo "# 1. Open Cloudflare Zero Trust Dashboard"
echo "open 'https://one.dash.cloudflare.com/'"
echo ""

echo "# 2. Open Cloudflare DNS Management" 
echo "open 'https://dash.cloudflare.com/$DOMAIN/dns'"
echo ""

echo "# 3. Test a service after configuration"
echo "open 'https://jellyfin.$DOMAIN'"
echo ""

echo "üìù Configuration Checklist:"
echo "=========================="
echo ""
echo "‚ñ° Authentication method configured (One-time PIN)"
echo "‚ñ° Tunnel public hostnames added (${#all_services[@]} total)"
echo "‚ñ° Access applications created (${#all_services[@]} total)"
echo "‚ñ° DNS records verified (all proxied üß°)"
echo "‚ñ° Test authentication flow"
echo ""

echo "üéØ Priority Services to Test First:"
echo "==================================="
echo "1. jellyfin.$DOMAIN - Core media streaming"
echo "2. overseerr.$DOMAIN - Request new content"
echo "3. sonarr.$DOMAIN - TV show management"
echo "4. radarr.$DOMAIN - Movie management"
echo "5. prowlarr.$DOMAIN - Indexer configuration"
echo ""

echo "üîí Remember:"
echo "============"
echo "‚Ä¢ All services will require email authentication"
echo "‚Ä¢ You'll receive a PIN code at: $EMAIL"
echo "‚Ä¢ Session lasts 24 hours by default"
echo "‚Ä¢ Use incognito/private browsing if you have issues"
echo ""

echo "üõ†Ô∏è  Troubleshooting:"
echo "==================="
echo "‚Ä¢ Check tunnel status: docker logs cloudflared"
echo "‚Ä¢ Verify service health: docker ps"
echo "‚Ä¢ Test internal access: curl -I http://localhost:8096"
echo "‚Ä¢ View Traefik routes: https://traefik.$DOMAIN"
echo ""

echo "üìä After setup, run the complete test:"
echo "======================================"
echo "./test-complete-stack.sh"
