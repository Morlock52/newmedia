FROM python:3.11-slim

# Set working directory
WORKDIR /app

# Install system dependencies for optimization
RUN apt-get update && apt-get install -y \
    curl \
    wget \
    git \
    sudo \
    procps \
    net-tools \
    sysstat \
    util-linux \
    coreutils \
    systemd \
    systemctl \
    && rm -rf /var/lib/apt/lists/*

# Create optimizer user with sudo privileges
RUN groupadd -r optimizer && \
    useradd -r -g optimizer -G sudo optimizer && \
    echo 'optimizer ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers

# Copy requirements
COPY requirements.txt /app/

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements.txt && \
    pip install --no-cache-dir \
    psutil \
    docker \
    pyyaml

# Copy application code
COPY optimization/ /app/optimization/
COPY core/ /app/core/
COPY config/ /app/config/
COPY scripts/ /app/scripts/

# Create necessary directories
RUN mkdir -p /app/data /app/logs /app/tmp && \
    chown -R optimizer:optimizer /app

# Copy optimizer startup script
COPY docker/scripts/start-optimizer.sh /app/start-optimizer.sh
RUN chmod +x /app/start-optimizer.sh

# Create optimization scripts directory
RUN mkdir -p /app/optimization-scripts && \
    chown -R optimizer:optimizer /app/optimization-scripts

# Copy system optimization scripts
COPY docker/scripts/system-optimizations/ /app/optimization-scripts/
RUN chmod +x /app/optimization-scripts/*.sh

# Switch to optimizer user
USER optimizer

# Set environment variables
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1
ENV CONFIG_PATH=/app/config/monitoring.yml
ENV OPTIMIZATION_DB_PATH=/app/data/optimizations.db
ENV LOG_LEVEL=INFO

# Health check
HEALTHCHECK --interval=60s --timeout=30s --start-period=60s --retries=3 \
    CMD python -c "from optimization.performance_optimizer import PerformanceOptimizer; print('Optimizer healthy')" || exit 1

# Default command
CMD ["/app/start-optimizer.sh"]