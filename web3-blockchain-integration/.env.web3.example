# Web3 Media Platform Configuration Example
# Copy this file to .env.web3 and fill in your values

# ============================================================================
# BLOCKCHAIN NETWORK CONFIGURATION
# ============================================================================

# Primary Network (mainnet, polygon, arbitrum, optimism, localhost)
NETWORK=mainnet

# Ethereum Mainnet
ETHEREUM_RPC_URL=https://rpc.ankr.com/eth
ETHEREUM_PRIVATE_KEY=your_ethereum_private_key_here
ETHERSCAN_API_KEY=your_etherscan_api_key_here

# Polygon Network
POLYGON_RPC_URL=https://rpc.ankr.com/polygon
POLYGON_PRIVATE_KEY=your_polygon_private_key_here
POLYGONSCAN_API_KEY=your_polygonscan_api_key_here

# Arbitrum Network
ARBITRUM_RPC_URL=https://rpc.ankr.com/arbitrum
ARBITRUM_PRIVATE_KEY=your_arbitrum_private_key_here
ARBISCAN_API_KEY=your_arbiscan_api_key_here

# Optimism Network
OPTIMISM_RPC_URL=https://rpc.ankr.com/optimism
OPTIMISM_PRIVATE_KEY=your_optimism_private_key_here
OPTIMISM_API_KEY=your_optimism_api_key_here

# BSC Network
BSC_RPC_URL=https://rpc.ankr.com/bsc
BSC_PRIVATE_KEY=your_bsc_private_key_here
BSCSCAN_API_KEY=your_bscscan_api_key_here

# ============================================================================
# SMART CONTRACT ADDRESSES
# ============================================================================

# Main Contracts (will be populated after deployment)
CONTENT_OWNERSHIP_ADDRESS=
MEDIA_DAO_ADDRESS=
MARKETPLACE_ADDRESS=
MEDIA_NFT_ADDRESS=
PAYMENT_PROCESSOR_ADDRESS=

# Per-Network Contract Addresses (if different)
ETHEREUM_CONTENT_OWNERSHIP_ADDRESS=
ETHEREUM_MEDIA_DAO_ADDRESS=
ETHEREUM_MARKETPLACE_ADDRESS=

POLYGON_CONTENT_OWNERSHIP_ADDRESS=
POLYGON_MEDIA_DAO_ADDRESS=
POLYGON_MARKETPLACE_ADDRESS=

# ============================================================================
# IPFS CONFIGURATION
# ============================================================================

# IPFS Node Settings
IPFS_HOST=ipfs-node
IPFS_PORT=5001
IPFS_PROTOCOL=http
IPFS_GATEWAY_URL=http://localhost:8080
IPFS_CLUSTER_API=http://ipfs-cluster:9094

# IPFS Pinning Services
PINATA_API_KEY=your_pinata_api_key_here
PINATA_SECRET_KEY=your_pinata_secret_key_here
WEB3_STORAGE_TOKEN=your_web3_storage_token_here

# IPFS Network Configuration
IPFS_SWARM_KEY=generated_swarm_key_here
CLUSTER_SECRET=generated_cluster_secret_here
IPFS_ENCRYPTION_ENABLED=true

# ============================================================================
# DATABASE CONFIGURATION
# ============================================================================

# PostgreSQL Database
DB_HOST=postgres
DB_PORT=5432
DB_NAME=web3_media
DB_USER=postgres
DB_PASSWORD=your_secure_postgres_password_here
DB_SSL=false
DB_MAX_CONNECTIONS=20

# Redis Cache
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_PASSWORD=your_redis_password_here
REDIS_DB=0

# ============================================================================
# JELLYFIN INTEGRATION
# ============================================================================

# Jellyfin Server Configuration
JELLYFIN_URL=http://jellyfin:8096
JELLYFIN_API_KEY=your_jellyfin_api_key_here
JELLYFIN_WEBHOOK_SECRET=your_jellyfin_webhook_secret_here

# ============================================================================
# SECURITY CONFIGURATION
# ============================================================================

# JWT and Encryption
JWT_SECRET=your_super_secure_jwt_secret_here_at_least_64_characters_long
ENCRYPTION_KEY=your_32_character_encryption_key_here_exactly_32_chars

# Private Keys for Smart Contract Deployment
DEPLOYER_PRIVATE_KEY=your_deployer_private_key_here

# API Keys for External Services
INFURA_PROJECT_ID=your_infura_project_id_here
ALCHEMY_API_KEY=your_alchemy_api_key_here
ANKR_API_KEY=your_ankr_api_key_here

# WalletConnect Project ID (for frontend)
WALLETCONNECT_PROJECT_ID=your_walletconnect_project_id_here

# ============================================================================
# SERVICE CONFIGURATION
# ============================================================================

# API Service
NODE_ENV=production
PORT=3030
API_RATE_LIMIT_MAX=1000
UPLOAD_RATE_LIMIT_MAX=50
MAX_FILE_SIZE=5368709120
CONCURRENT_UPLOADS=5
CACHE_TTL=300

# Allowed Origins for CORS
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3031,http://localhost:8096

# ============================================================================
# BACKUP AND MONITORING
# ============================================================================

# AWS S3 Backup Configuration
BACKUP_S3_BUCKET=your_backup_bucket_name
AWS_ACCESS_KEY_ID=your_aws_access_key_id
AWS_SECRET_ACCESS_KEY=your_aws_secret_access_key
AWS_REGION=us-east-1

# Monitoring and Alerts
ENABLE_METRICS=true
METRICS_PORT=9090
SECURITY_ALERT_WEBHOOK=your_security_alert_webhook_url
LOG_LEVEL=info

# ============================================================================
# FRONTEND CONFIGURATION
# ============================================================================

# React App Environment Variables
REACT_APP_API_URL=http://localhost:3030
REACT_APP_IPFS_GATEWAY=http://localhost:8080
REACT_APP_JELLYFIN_URL=http://localhost:8096

# Smart Contract Addresses for Frontend (copied from above)
REACT_APP_CONTENT_OWNERSHIP_ADDRESS=${CONTENT_OWNERSHIP_ADDRESS}
REACT_APP_MEDIA_DAO_ADDRESS=${MEDIA_DAO_ADDRESS}
REACT_APP_MARKETPLACE_ADDRESS=${MARKETPLACE_ADDRESS}

# Network Configuration for Frontend
REACT_APP_DEFAULT_CHAIN_ID=1
REACT_APP_SUPPORTED_CHAINS=1,137,42161,10,56

# ============================================================================
# DEVELOPMENT SETTINGS
# ============================================================================

# Development blockchain (for testing)
HARDHAT_NETWORK=localhost
HARDHAT_RPC_URL=http://hardhat-node:8545

# Test Configuration
START_BLOCK=latest
BATCH_SIZE=1000
INDEXING_INTERVAL=10000

# ============================================================================
# PRODUCTION OPTIMIZATIONS
# ============================================================================

# Performance Settings
WEB3_CONNECTION_TIMEOUT=30000
IPFS_TIMEOUT=60000
DATABASE_QUERY_TIMEOUT=30000

# Cluster Settings
IPFS_CLUSTER_NODES=http://ipfs-cluster:9094
CLUSTER_REPLICATION_FACTOR=3

# Security Settings
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=1000
SESSION_TIMEOUT=86400000

# ============================================================================
# OPTIONAL INTEGRATIONS
# ============================================================================

# Discord Bot (for community notifications)
DISCORD_BOT_TOKEN=your_discord_bot_token
DISCORD_CHANNEL_ID=your_discord_channel_id

# Telegram Bot (for alerts)
TELEGRAM_BOT_TOKEN=your_telegram_bot_token
TELEGRAM_CHAT_ID=your_telegram_chat_id

# Email Notifications
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your_smtp_user
SMTP_PASS=your_smtp_password

# ============================================================================
# NOTES
# ============================================================================

# 1. Generate secure random values for JWT_SECRET and ENCRYPTION_KEY:
#    - JWT_SECRET should be at least 64 characters long
#    - ENCRYPTION_KEY must be exactly 32 characters
#    
#    You can generate them using:
#    node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"

# 2. For production deployment:
#    - Use strong, unique passwords for all services
#    - Enable SSL/TLS for all external connections
#    - Set up proper firewall rules
#    - Use environment-specific RPC URLs with your own API keys
#    - Consider using a secrets management service

# 3. Smart contract addresses will be populated automatically during deployment
#    If you're using existing contracts, fill them in manually

# 4. For local development, you can use the default values
#    For production, all placeholder values must be replaced

# 5. Make sure to add this file to .gitignore to prevent committing secrets