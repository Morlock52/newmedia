# Ultra-High Performance NGINX Configuration for 8K Streaming
# Optimized for AV1 codec and hardware acceleration

user nginx;
worker_processes auto;
worker_cpu_affinity auto;
worker_rlimit_nofile 65535;
pcre_jit on;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Load modules for advanced features
load_module modules/ngx_http_brotli_filter_module.so;
load_module modules/ngx_http_brotli_static_module.so;
load_module modules/ngx_http_headers_more_filter_module.so;
load_module modules/ngx_http_vod_module.so;

events {
    worker_connections 8192;
    use epoll;
    multi_accept on;
    accept_mutex off;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Advanced logging with performance metrics
    log_format performance '$remote_addr - $remote_user [$time_local] '
                          '"$request" $status $body_bytes_sent '
                          '"$http_referer" "$http_user_agent" '
                          'rt=$request_time uct="$upstream_connect_time" '
                          'uht="$upstream_header_time" urt="$upstream_response_time" '
                          'cs=$upstream_cache_status';

    access_log /var/log/nginx/access.log performance buffer=256k flush=5s;

    # TCP optimizations for 10Gbps+ networks
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 300;
    keepalive_requests 10000;
    reset_timedout_connection on;

    # Buffer optimizations for 8K content
    client_body_buffer_size 256k;
    client_header_buffer_size 64k;
    client_max_body_size 0;
    large_client_header_buffers 8 128k;
    
    # Output buffers for large video files
    output_buffers 64 512k;
    postpone_output 1460;
    
    # Sendfile optimizations
    sendfile_max_chunk 2m;
    aio threads;
    aio_write on;
    directio 8m;
    
    # Thread pools for IO operations
    thread_pool io_pool threads=64 max_queue=65536;

    # Compression settings
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml font/truetype font/opentype application/vnd.ms-fontobject image/svg+xml;
    gzip_min_length 1024;
    gzip_disable "msie6";
    
    # Brotli compression for better performance
    brotli on;
    brotli_comp_level 6;
    brotli_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml font/truetype font/opentype application/vnd.ms-fontobject image/svg+xml;

    # Cache settings
    proxy_cache_path /var/cache/nginx/proxy levels=1:2 keys_zone=video_cache:100m max_size=500g inactive=30d use_temp_path=off;
    proxy_cache_path /var/cache/nginx/segments levels=1:2 keys_zone=segment_cache:200m max_size=1t inactive=7d use_temp_path=off;
    proxy_cache_path /var/cache/nginx/thumbnails levels=1:2 keys_zone=thumb_cache:50m max_size=50g inactive=30d use_temp_path=off;
    
    # Fastcgi cache for dynamic content
    fastcgi_cache_path /var/cache/nginx/fastcgi levels=1:2 keys_zone=fcgi_cache:100m max_size=10g inactive=60m;

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=100r/s;
    limit_req_zone $binary_remote_addr zone=video_limit:50m rate=50r/s;
    limit_conn_zone $binary_remote_addr zone=conn_limit:10m;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self' https:; script-src 'self' 'unsafe-inline' 'unsafe-eval' https:; style-src 'self' 'unsafe-inline' https:; img-src 'self' data: https:; font-src 'self' https:; media-src 'self' blob: https:;" always;

    # Hide nginx version
    server_tokens off;
    more_clear_headers Server;

    # Map for WebSocket upgrade
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    # Upstream configuration for media services
    upstream jellyfin_backend {
        least_conn;
        server jellyfin_gpu:8096 max_fails=3 fail_timeout=30s;
        keepalive 32;
        keepalive_requests 100;
        keepalive_timeout 300s;
    }

    upstream plex_backend {
        least_conn;
        server plex:32400 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream emby_backend {
        least_conn;
        server emby:8096 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # 8K Streaming Server Configuration
    server {
        listen 80;
        listen [::]:80;
        server_name _;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name media.example.com;

        # SSL Configuration for HTTP/2
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        ssl_protocols TLSv1.3;
        ssl_ciphers 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256';
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:50m;
        ssl_session_timeout 1d;
        ssl_session_tickets off;
        ssl_early_data on;
        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate /etc/nginx/ssl/chain.pem;

        # HTTP/2 Push for assets
        http2_push_preload on;

        # Enable QUIC and HTTP/3
        add_header Alt-Svc 'h3=":443"; ma=86400';

        # Root location
        location / {
            root /var/www/html;
            try_files $uri $uri/ =404;
        }

        # Jellyfin location with advanced caching
        location /jellyfin {
            proxy_pass http://jellyfin_backend;
            proxy_http_version 1.1;
            
            # Headers for proxying
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # WebSocket support
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            
            # Disable buffering for streaming
            proxy_buffering off;
            proxy_request_buffering off;
            
            # Timeouts for long-running streams
            proxy_connect_timeout 600s;
            proxy_send_timeout 600s;
            proxy_read_timeout 600s;
            
            # Large buffers for 8K content
            proxy_buffer_size 256k;
            proxy_buffers 16 256k;
            proxy_busy_buffers_size 512k;
            proxy_temp_file_write_size 1024k;
            
            # Cache configuration
            proxy_cache video_cache;
            proxy_cache_key "$scheme$proxy_host$uri$is_args$args";
            proxy_cache_valid 200 206 301 302 7d;
            proxy_cache_valid 404 1m;
            proxy_cache_lock on;
            proxy_cache_lock_age 5s;
            proxy_cache_lock_timeout 5s;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            proxy_cache_background_update on;
            proxy_cache_revalidate on;
            
            # Add cache status header
            add_header X-Cache-Status $upstream_cache_status always;
            add_header Cache-Control "public, max-age=604800, immutable" always;
            
            # Rate limiting
            limit_req zone=video_limit burst=100 nodelay;
            limit_conn conn_limit 10;
        }

        # Video segment caching location
        location ~ ^/jellyfin/videos/.*/stream {
            proxy_pass http://jellyfin_backend;
            proxy_http_version 1.1;
            
            # Aggressive caching for video segments
            proxy_cache segment_cache;
            proxy_cache_key "$scheme$proxy_host$uri$is_args$args$http_range";
            proxy_cache_valid 200 206 30d;
            proxy_cache_lock on;
            proxy_cache_lock_timeout 10s;
            proxy_cache_methods GET HEAD;
            proxy_cache_bypass $http_pragma $http_authorization;
            
            # Range request support
            proxy_set_header Range $http_range;
            proxy_set_header If-Range $http_if_range;
            
            # Slice module for better caching of large files
            slice 10m;
            proxy_cache_key "$scheme$proxy_host$uri$is_args$args$slice_range";
            proxy_set_header Range $slice_range;
            proxy_cache_valid 206 30d;
            
            # Performance headers
            add_header X-Cache-Status $upstream_cache_status always;
            add_header Accept-Ranges bytes always;
            add_header Cache-Control "public, max-age=2592000, immutable" always;
            
            # Disable unnecessary processing
            proxy_buffering on;
            proxy_ignore_headers Set-Cookie;
            proxy_hide_header Set-Cookie;
            
            # Thread pool for large file operations
            aio threads=io_pool;
            aio_write on;
            directio 8m;
        }

        # Thumbnail caching
        location ~ ^/jellyfin/Items/.*/Images {
            proxy_pass http://jellyfin_backend;
            proxy_http_version 1.1;
            
            # Thumbnail cache settings
            proxy_cache thumb_cache;
            proxy_cache_key "$scheme$proxy_host$uri$is_args$args";
            proxy_cache_valid 200 30d;
            proxy_cache_valid 404 1h;
            proxy_cache_lock on;
            proxy_cache_lock_timeout 5s;
            
            # Performance optimizations
            proxy_buffering on;
            proxy_buffer_size 16k;
            proxy_buffers 8 16k;
            
            # Headers
            add_header X-Cache-Status $upstream_cache_status always;
            add_header Cache-Control "public, max-age=2592000, immutable" always;
            expires 30d;
        }

        # HLS streaming optimization
        location ~ \.m3u8$ {
            proxy_pass http://jellyfin_backend;
            proxy_http_version 1.1;
            
            # Dynamic playlist caching
            proxy_cache video_cache;
            proxy_cache_key "$scheme$proxy_host$uri$is_args$args";
            proxy_cache_valid 200 5s;
            proxy_cache_lock on;
            
            # CORS headers for HLS
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods "GET, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Range" always;
            add_header Access-Control-Expose-Headers "Content-Length, Content-Range" always;
            
            # Content type
            add_header Content-Type "application/vnd.apple.mpegurl" always;
        }

        # TS segment optimization
        location ~ \.ts$ {
            proxy_pass http://jellyfin_backend;
            proxy_http_version 1.1;
            
            # Segment caching
            proxy_cache segment_cache;
            proxy_cache_key "$scheme$proxy_host$uri";
            proxy_cache_valid 200 30d;
            proxy_cache_lock on;
            
            # CORS headers
            add_header Access-Control-Allow-Origin * always;
            add_header Cache-Control "public, max-age=2592000, immutable" always;
            
            # Performance optimizations
            aio threads=io_pool;
            directio 4m;
        }

        # WebSocket locations for real-time features
        location /jellyfin/socket {
            proxy_pass http://jellyfin_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400;
            proxy_send_timeout 86400;
        }

        # API rate limiting
        location /jellyfin/api {
            proxy_pass http://jellyfin_backend;
            proxy_http_version 1.1;
            
            # Stricter rate limiting for API
            limit_req zone=api_limit burst=20 nodelay;
            limit_conn conn_limit 5;
            
            # Standard proxy headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Nginx status for monitoring
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 172.20.0.0/24;
            deny all;
        }
    }

    # CDN origin server configuration
    server {
        listen 8080;
        server_name cdn-origin.example.com;
        
        # Only allow Cloudflare IPs
        allow 173.245.48.0/20;
        allow 103.21.244.0/22;
        allow 103.22.200.0/22;
        allow 103.31.4.0/22;
        allow 141.101.64.0/18;
        allow 108.162.192.0/18;
        allow 190.93.240.0/20;
        allow 188.114.96.0/20;
        allow 197.234.240.0/22;
        allow 198.41.128.0/17;
        allow 162.158.0.0/15;
        allow 104.16.0.0/13;
        allow 104.24.0.0/14;
        allow 172.64.0.0/13;
        allow 131.0.72.0/22;
        allow 2400:cb00::/32;
        allow 2606:4700::/32;
        allow 2803:f800::/32;
        allow 2405:b500::/32;
        allow 2405:8100::/32;
        allow 2a06:98c0::/29;
        allow 2c0f:f248::/32;
        deny all;
        
        # Serve static content directly
        root /var/www/cdn;
        
        location / {
            # Enable caching headers
            expires 30d;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options "nosniff";
            
            # Enable sendfile for performance
            sendfile on;
            tcp_nopush on;
            
            # Thread pool for IO
            aio threads=io_pool;
            directio 4m;
        }
    }
}

# Stream configuration for RTMP/HLS live streaming
stream {
    upstream rtmp_backend {
        server rtmp-server:1935 max_fails=3 fail_timeout=30s;
    }
    
    server {
        listen 1935;
        proxy_pass rtmp_backend;
        proxy_timeout 300s;
        proxy_connect_timeout 30s;
        proxy_protocol on;
    }
}