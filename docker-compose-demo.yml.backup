version: "3.9"

networks:
  media-net:
    driver: bridge
  monitoring-net:
    driver: bridge
  vpn-net:
    driver: bridge

volumes:
  # Database volumes
  postgres_data:
  mariadb_data:
  redis_data:
  # Media volumes
  jellyfin_config:
  plex_config:
  emby_config:
  # Monitoring volumes
  grafana_data:
  prometheus_data:
  loki_data:

services:
  # ==============================================
  # DASHBOARDS & MAIN INTERFACE
  # ==============================================
  
  homarr:
    image: ghcr.io/ajnart/homarr:latest
    container_name: homarr
    environment:
      - TZ=${TZ:-America/New_York}
    volumes:
      - ./homarr-configs:/app/data/configs
      - ./homarr-data:/data
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - 7575:7575
    networks:
      - media-net
    restart: unless-stopped
    labels:
      - "homarr.group=Dashboards"

  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    container_name: homepage
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - ./homepage-configs:/app/config
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - 3001:3000
    networks:
      - media-net
    restart: unless-stopped

  # ==============================================
  # MEDIA SERVERS
  # ==============================================

  jellyfin:
    image: jellyfin/jellyfin:latest
    container_name: jellyfin
    environment:
      - TZ=${TZ:-America/New_York}
      - JELLYFIN_PublishedServerUrl=http://localhost:8096
    volumes:
      - jellyfin_config:/config
      - ./media:/media:ro
      - ./transcode:/transcode
    ports:
      - 8096:8096
      - 8920:8920  # HTTPS
      - 7359:7359/udp  # Discovery
    networks:
      - media-net
    restart: unless-stopped
    labels:
      - "homarr.group=Media Servers"

  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ:-America/New_York}
      - VERSION=docker
      - PLEX_CLAIM=${PLEX_CLAIM:-}
    volumes:
      - plex_config:/config
      - ./media:/media:ro
      - ./transcode:/transcode
    ports:
      - 32400:32400
      - 3005:3005
      - 8324:8324
      - 32410:32410/udp
      - 32412:32412/udp
      - 32413:32413/udp
      - 32414:32414/udp
      - 32469:32469
    networks:
      - media-net
    restart: unless-stopped

  # ==============================================
  # ARR SERVICES
  # ==============================================

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ:-America/New_York}
    volumes:
      - ./sonarr-config:/config
      - ./media/tv:/tv
      - ./downloads:/downloads
    ports:
      - 8989:8989
    networks:
      - media-net
    restart: unless-stopped
    labels:
      - "homarr.group=Media Management"

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ:-America/New_York}
    volumes:
      - ./radarr-config:/config
      - ./media/movies:/movies
      - ./downloads:/downloads
    ports:
      - 7878:7878
    networks:
      - media-net
    restart: unless-stopped

  lidarr:
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ:-America/New_York}
    volumes:
      - ./lidarr-config:/config
      - ./media/music:/music
      - ./downloads:/downloads
    ports:
      - 8686:8686
    networks:
      - media-net
    restart: unless-stopped

  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ:-America/New_York}
    volumes:
      - ./bazarr-config:/config
      - ./media/movies:/movies
      - ./media/tv:/tv
    ports:
      - 6767:6767
    networks:
      - media-net
    restart: unless-stopped

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ:-America/New_York}
    volumes:
      - ./prowlarr-config:/config
    ports:
      - 9696:9696
    networks:
      - media-net
    restart: unless-stopped

  # ==============================================
  # REQUEST SERVICES
  # ==============================================

  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    environment:
      - LOG_LEVEL=debug
      - TZ=${TZ:-America/New_York}
    volumes:
      - ./jellyseerr-config:/app/config
    ports:
      - 5055:5055
    networks:
      - media-net
    restart: unless-stopped

  overseerr:
    image: lscr.io/linuxserver/overseerr:latest
    container_name: overseerr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ:-America/New_York}
    volumes:
      - ./overseerr-config:/config
    ports:
      - 5056:5055
    networks:
      - media-net
    restart: unless-stopped

  # ==============================================
  # DOWNLOAD CLIENTS
  # ==============================================

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ:-America/New_York}
      - WEBUI_PORT=8080
    volumes:
      - ./qbittorrent-config:/config
      - ./downloads:/downloads
    ports:
      - 8090:8080  # Changed to avoid conflicts
      - 6881:6881
      - 6881:6881/udp
    networks:
      - media-net
    restart: unless-stopped

  transmission:
    image: lscr.io/linuxserver/transmission:latest
    container_name: transmission
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ:-America/New_York}
    volumes:
      - ./transmission-config:/config
      - ./downloads:/downloads
      - ./watch:/watch
    ports:
      - 9091:9091
      - 51413:51413
      - 51413:51413/udp
    networks:
      - media-net
    restart: unless-stopped

  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd:latest
    container_name: sabnzbd
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ:-America/New_York}
    volumes:
      - ./sabnzbd-config:/config
      - ./downloads:/downloads
      - ./incomplete-downloads:/incomplete-downloads
    ports:
      - 8085:8080
    networks:
      - media-net
    restart: unless-stopped

  # ==============================================
  # MONITORING & ANALYTICS
  # ==============================================

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    ports:
      - 9090:9090
    networks:
      - monitoring-net
      - media-net
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - 3000:3000
    networks:
      - monitoring-net
      - media-net
    restart: unless-stopped

  loki:
    image: grafana/loki:latest
    container_name: loki
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - loki_data:/loki
    ports:
      - 3100:3100
    networks:
      - monitoring-net
    restart: unless-stopped

  uptime-kuma:
    image: louislam/uptime-kuma:latest
    container_name: uptime-kuma
    volumes:
      - ./uptime-kuma-data:/app/data
    ports:
      - 3004:3001
    networks:
      - monitoring-net
      - media-net
    restart: unless-stopped

  # ==============================================
  # DATABASES
  # ==============================================

  postgres:
    image: postgres:16-alpine
    container_name: postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-mediaserver}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - media-net
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - 6379:6379
    networks:
      - media-net
    restart: unless-stopped

  # ==============================================
  # MANAGEMENT & UTILITIES
  # ==============================================

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    environment:
      - TZ=${TZ:-America/New_York}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./portainer-data:/data
    ports:
      - 9000:9000
    networks:
      - media-net
    restart: unless-stopped

  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    environment:
      - TZ=${TZ:-America/New_York}
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=3600
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - media-net
    restart: unless-stopped

  # ==============================================
  # REVERSE PROXY & SSL
  # ==============================================

  nginx-proxy-manager:
    image: jc21/nginx-proxy-manager:latest
    container_name: nginx-proxy-manager
    environment:
      - TZ=${TZ:-America/New_York}
    volumes:
      - ./nginx-proxy-manager-data:/data
      - ./nginx-proxy-manager-letsencrypt:/etc/letsencrypt
    ports:
      - 8081:80   # HTTP
      - 8443:443  # HTTPS
      - 8181:81   # Admin interface
    networks:
      - media-net
    restart: unless-stopped