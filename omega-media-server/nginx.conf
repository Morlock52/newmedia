user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    access_log /var/log/nginx/access.log combined;

    # Performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100G;
    
    # Compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml application/atom+xml image/svg+xml;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=api:10m rate=100r/s;

    # Upstream definitions
    upstream omega_app {
        server 127.0.0.1:3000;
        keepalive 32;
    }

    upstream jellyfin {
        server 127.0.0.1:8096;
        keepalive 32;
    }

    upstream plex {
        server 127.0.0.1:32400;
        keepalive 32;
    }

    # SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_stapling on;
    ssl_stapling_verify on;

    # Default server
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;

        # Redirect to HTTPS if enabled
        location / {
            if ($ssl_enabled = "true") {
                return 301 https://$server_name$request_uri;
            }
            proxy_pass http://omega_app;
            include /etc/nginx/proxy.conf;
        }
    }

    # HTTPS server
    server {
        listen 443 ssl http2 default_server;
        listen [::]:443 ssl http2 default_server;
        server_name _;

        ssl_certificate /config/ssl/cert.pem;
        ssl_certificate_key /config/ssl/key.pem;

        # Main application
        location / {
            proxy_pass http://omega_app;
            include /etc/nginx/proxy.conf;
            
            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # API endpoints
        location /api {
            limit_req zone=api burst=50 nodelay;
            proxy_pass http://omega_app;
            include /etc/nginx/proxy.conf;
        }

        # GraphQL endpoint
        location /graphql {
            proxy_pass http://omega_app;
            include /etc/nginx/proxy.conf;
        }

        # Jellyfin
        location /jellyfin {
            return 302 $scheme://$server_name/jellyfin/;
        }

        location ^~ /jellyfin/ {
            proxy_pass http://jellyfin/;
            include /etc/nginx/proxy.conf;
            
            # Jellyfin WebSocket
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # Plex
        location /web {
            proxy_pass http://plex;
            include /etc/nginx/proxy.conf;
        }

        location /plex {
            proxy_pass http://plex;
            include /etc/nginx/proxy.conf;
        }

        # Media files
        location /media {
            alias /media;
            autoindex on;
            
            # Enable range requests for video streaming
            add_header Accept-Ranges bytes;
            
            # Cache headers
            expires 7d;
            add_header Cache-Control "public, immutable";
        }

        # Downloads
        location /downloads {
            alias /downloads;
            autoindex on;
            auth_request /api/auth/verify;
        }

        # Static assets
        location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }

    # Include additional service configurations
    include /etc/nginx/sites-enabled/*;
}