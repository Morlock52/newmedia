#!/bin/bash\n\n# Enhanced Media Stack Deployment Script\n# Adds missing media applications to your existing stack\n\nset -e\n\necho \"üé¨ Enhanced Media Stack Deployment\"\necho \"====================================\"\necho\necho \"This script will add the missing media applications to your stack:\"\necho \"  ‚ú® AudioBookshelf - Audiobook server\"\necho \"  üéµ Navidrome - Dedicated music streaming\"\necho \"  üì∏ Immich - Modern photo management\"\necho \"  üìö Calibre-Web - E-book reader\"\necho \"  ‚öôÔ∏è FileFlows - Automated file processing\"\necho\n\n# Check if docker-compose-enhanced.yml exists\nif [ ! -f \"docker-compose-enhanced.yml\" ]; then\n    echo \"‚ùå Error: docker-compose-enhanced.yml not found!\"\n    echo \"   Please ensure you're in the correct directory.\"\n    exit 1\nfi\n\n# Check if .env file exists\nif [ ! -f \".env\" ]; then\n    echo \"‚ùå Error: .env file not found!\"\n    echo \"   Please ensure your environment file is properly configured.\"\n    exit 1\nfi\n\n# Function to prompt for confirmation\nconfirm() {\n    read -p \"$1 (y/N): \" -n 1 -r\n    echo\n    [[ $REPLY =~ ^[Yy]$ ]]\n}\n\n# Show current running services\necho \"üìä Current running services:\"\ndocker compose ps --format \"table\" 2>/dev/null || echo \"No services currently running\"\necho\n\n# Deployment options\necho \"üöÄ Deployment Options:\"\necho \"  1. Deploy HIGH PRIORITY missing applications only (recommended)\"\necho \"  2. Deploy ALL enhanced applications\"\necho \"  3. Deploy specific applications interactively\"\necho \"  4. Show what would be deployed (dry run)\"\necho\n\nread -p \"Choose an option (1-4): \" choice\necho\n\ncase $choice in\n    1)\n        echo \"üéØ Deploying HIGH PRIORITY missing applications...\"\n        \n        SERVICES=\"audiobookshelf navidrome immich-server immich-microservices immich-machine-learning immich-redis immich-postgres calibre-web fileflows\"\n        \n        echo \"Services to deploy:\"\n        for service in $SERVICES; do\n            echo \"  ‚úì $service\"\n        done\n        echo\n        \n        if confirm \"Deploy these services?\"; then\n            echo \"üöÄ Starting deployment...\"\n            docker compose -f docker-compose-enhanced.yml up -d $SERVICES\n            echo\n            echo \"‚úÖ High priority applications deployed successfully!\"\n        else\n            echo \"‚ùå Deployment cancelled.\"\n            exit 0\n        fi\n        ;;\n    \n    2)\n        echo \"üéØ Deploying ALL enhanced applications...\"\n        \n        if confirm \"This will deploy ALL services from the enhanced stack. Continue?\"; then\n            echo \"üöÄ Starting full deployment...\"\n            docker compose -f docker-compose-enhanced.yml up -d\n            echo\n            echo \"‚úÖ Full enhanced stack deployed successfully!\"\n        else\n            echo \"‚ùå Deployment cancelled.\"\n            exit 0\n        fi\n        ;;\n    \n    3)\n        echo \"üéØ Interactive deployment...\"\n        \n        AVAILABLE_SERVICES=(\"audiobookshelf\" \"navidrome\" \"immich-server\" \"calibre-web\" \"fileflows\")\n        SELECTED_SERVICES=()\n        \n        for service in \"${AVAILABLE_SERVICES[@]}\"; do\n            if confirm \"Deploy $service?\"; then\n                SELECTED_SERVICES+=(\"$service\")\n            fi\n        done\n        \n        # Add Immich dependencies if immich-server is selected\n        if [[ \" ${SELECTED_SERVICES[@]} \" =~ \" immich-server \" ]]; then\n            SELECTED_SERVICES+=(\"immich-microservices\" \"immich-machine-learning\" \"immich-redis\" \"immich-postgres\")\n        fi\n        \n        if [ ${#SELECTED_SERVICES[@]} -eq 0 ]; then\n            echo \"‚ùå No services selected. Exiting.\"\n            exit 0\n        fi\n        \n        echo \"Selected services:\"\n        for service in \"${SELECTED_SERVICES[@]}\"; do\n            echo \"  ‚úì $service\"\n        done\n        echo\n        \n        if confirm \"Deploy selected services?\"; then\n            echo \"üöÄ Starting selective deployment...\"\n            docker compose -f docker-compose-enhanced.yml up -d \"${SELECTED_SERVICES[@]}\"\n            echo\n            echo \"‚úÖ Selected applications deployed successfully!\"\n        else\n            echo \"‚ùå Deployment cancelled.\"\n            exit 0\n        fi\n        ;;\n    \n    4)\n        echo \"üîç Dry run - showing what would be deployed...\"\n        \n        echo \"High priority services:\"\n        SERVICES=\"audiobookshelf navidrome immich-server immich-microservices immich-machine-learning immich-redis immich-postgres calibre-web fileflows\"\n        for service in $SERVICES; do\n            echo \"  ‚úì $service\"\n        done\n        echo\n        \n        echo \"Docker compose validation:\"\n        docker compose -f docker-compose-enhanced.yml config --quiet && echo \"‚úÖ Configuration is valid\" || echo \"‚ùå Configuration has errors\"\n        echo\n        \n        echo \"To deploy manually, run:\"\n        echo \"docker compose -f docker-compose-enhanced.yml up -d $SERVICES\"\n        exit 0\n        ;;\n    \n    *)\n        echo \"‚ùå Invalid option. Exiting.\"\n        exit 1\n        ;;\nesac\n\n# Post-deployment information\necho\necho \"üéâ Deployment completed!\"\necho\necho \"üìã Next Steps:\"\necho \"  1. Wait 2-3 minutes for all services to start\"\necho \"  2. Check service status: docker compose ps\"\necho \"  3. View logs if needed: docker compose logs [service-name]\"\necho\necho \"üåê Access your new applications:\"\necho \"  üìñ AudioBookshelf: https://audiobooks.\\${DOMAIN}\"\necho \"  üéµ Navidrome: https://music.\\${DOMAIN}\"\necho \"  üì∏ Immich: https://photos.\\${DOMAIN}\"\necho \"  üìö Calibre-Web: https://books.\\${DOMAIN}\"\necho \"  ‚öôÔ∏è FileFlows: https://fileflows.\\${DOMAIN}\"\necho\necho \"üìñ For setup instructions, see: MISSING_MEDIA_ANALYSIS.md\"\necho\necho \"‚ö†Ô∏è  Remember to:\"\necho \"  - Configure each application through their web interfaces\"\necho \"  - Set up mobile apps for AudioBookshelf, Navidrome, and Immich\"\necho \"  - Add media to the appropriate directories\"\necho \"  - Update your Homarr dashboard with new services\"\necho\necho \"Happy streaming! üé¨üéµüìö\"\necho