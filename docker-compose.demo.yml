services:
  # üé¨ Jellyfin Media Server
  jellyfin:
    image: jellyfin/jellyfin:latest
    container_name: jellyfin-demo
    user: 1000:1000
    restart: unless-stopped
    ports:
      - "8096:8096"
      - "8920:8920"
    volumes:
      - ./data/jellyfin:/config
      - ./data/media:/media:ro
      - /tmp:/tmp:rw
    environment:
      - JELLYFIN_PublishedServerUrl=http://localhost:8096
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jellyfin.rule=Host(`localhost`) && PathPrefix(`/jellyfin`)"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8096/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # üè† Homepage Dashboard
  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    container_name: homepage-demo
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./homepage-config:/app/config
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - PUID=1000
      - PGID=1000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.homepage.rule=Host(`localhost`)"

  # ‚öôÔ∏è Portainer Management
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer-demo
    restart: unless-stopped
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data/portainer:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`localhost`) && PathPrefix(`/portainer`)"

  # üìä Prometheus Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus-demo
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - ./data/prometheus:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'

  # üìà Grafana Visualization
  grafana:
    image: grafana/grafana:latest
    container_name: grafana-demo
    restart: unless-stopped
    ports:
      - "3030:3000"
    volumes:
      - ./data/grafana:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=changeme
      - GF_USERS_ALLOW_SIGN_UP=false
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`localhost`) && PathPrefix(`/grafana`)"

networks:
  default:
    driver: bridge
    name: media-network-demo